#!/bin/bash

# Flow State Dev Installation Test Script
# Tests the complete installation process with verbose output

echo "üß™ Flow State Dev Installation Test"
echo "=================================="
echo

# Check prerequisites
echo "üìã Prerequisites Check:"
if ! command -v node >/dev/null 2>&1; then
    echo "‚ùå Node.js not found. Please install Node.js first."
    exit 1
fi

if ! command -v npm >/dev/null 2>&1; then
    echo "‚ùå npm not found. Please install npm first."
    exit 1
fi

echo "‚úÖ Node.js: $(node --version)"
echo "‚úÖ npm: $(npm --version)"
echo

# Show current state
echo "üîç Current State:"
if npm list -g flow-state-dev >/dev/null 2>&1; then
    echo "üì¶ Flow State Dev currently installed:"
    npm list -g flow-state-dev
else
    echo "üì¶ Flow State Dev not currently installed"
fi

if command -v fsd >/dev/null 2>&1; then
    echo "‚ö° fsd command available: $(which fsd)"
else
    echo "‚ö° fsd command not available"
fi
echo

# Clean uninstall first
echo "üßπ Clean Uninstall:"
echo "Removing any existing installation..."
npm uninstall -g flow-state-dev --verbose 2>&1 | head -20
echo

# Clear npm cache
echo "üóëÔ∏è  Clearing npm cache:"
npm cache clean --force
echo "‚úÖ Cache cleared"
echo

# Fresh install with verbose output
echo "üì• Fresh Installation (with verbose output):"
echo "Installing flow-state-dev@latest..."
echo
npm install -g flow-state-dev@latest --verbose --timing 2>&1 | tee /tmp/fsd-install.log
INSTALL_EXIT_CODE=$?
echo
echo "Installation exit code: $INSTALL_EXIT_CODE"

if [ $INSTALL_EXIT_CODE -ne 0 ]; then
    echo "‚ùå Installation failed!"
    echo "Check the log above for errors."
    exit 1
fi

# Verify installation
echo
echo "‚úÖ Installation completed. Verifying..."
echo

# Check if package is listed
echo "üì¶ Package verification:"
if npm list -g flow-state-dev >/dev/null 2>&1; then
    echo "‚úÖ Package found in global list:"
    npm list -g flow-state-dev
else
    echo "‚ùå Package not found in global list"
fi
echo

# Check bin file
echo "üìÅ Bin file verification:"
NPM_BIN=$(npm bin -g)
BIN_FILE="$NPM_BIN/fsd"

echo "npm bin directory: $NPM_BIN"
echo "Expected bin file: $BIN_FILE"

if [ -f "$BIN_FILE" ]; then
    echo "‚úÖ Bin file exists"
    echo "File info: $(ls -la "$BIN_FILE")"
    
    if [ -x "$BIN_FILE" ]; then
        echo "‚úÖ Bin file is executable"
    else
        echo "‚ùå Bin file is NOT executable"
        echo "Attempting to fix permissions..."
        chmod +x "$BIN_FILE"
        if [ -x "$BIN_FILE" ]; then
            echo "‚úÖ Permissions fixed"
        else
            echo "‚ùå Could not fix permissions"
        fi
    fi
else
    echo "‚ùå Bin file does NOT exist"
    echo "This indicates a packaging or installation problem"
fi
echo

# Test command availability
echo "‚ö° Command availability test:"
if command -v fsd >/dev/null 2>&1; then
    echo "‚úÖ fsd command found: $(which fsd)"
    
    # Test version command
    echo "Testing version command..."
    if fsd --version >/dev/null 2>&1; then
        echo "‚úÖ Version command works: $(fsd --version)"
    else
        echo "‚ùå Version command failed"
    fi
    
    # Test help command
    echo "Testing help command..."
    if fsd --help >/dev/null 2>&1; then
        echo "‚úÖ Help command works"
    else
        echo "‚ùå Help command failed"
    fi
    
else
    echo "‚ùå fsd command NOT found"
    
    # Check PATH
    echo "Checking PATH..."
    if echo "$PATH" | grep -q "$NPM_BIN"; then
        echo "‚úÖ npm bin directory is in PATH"
        echo "This suggests a different issue"
    else
        echo "‚ùå npm bin directory is NOT in PATH"
        echo "Current PATH: $PATH"
        echo
        echo "üí° Try adding to your shell profile:"
        echo "   export PATH=\"$NPM_BIN:\$PATH\""
    fi
fi
echo

# Direct execution test
echo "üéØ Direct execution test:"
if [ -f "$BIN_FILE" ]; then
    echo "Testing direct execution of bin file..."
    if "$BIN_FILE" --version >/dev/null 2>&1; then
        echo "‚úÖ Direct execution works: $("$BIN_FILE" --version)"
    else
        echo "‚ùå Direct execution failed"
        echo "Attempting with node explicitly..."
        if node "$BIN_FILE" --version >/dev/null 2>&1; then
            echo "‚úÖ Execution with node works: $(node "$BIN_FILE" --version)"
        else
            echo "‚ùå Even explicit node execution failed"
            echo "This suggests a problem with the bin file itself"
        fi
    fi
else
    echo "‚ùå Cannot test - bin file does not exist"
fi
echo

# Summary
echo "üìä Test Summary:"
echo "================"

if command -v fsd >/dev/null 2>&1 && fsd --version >/dev/null 2>&1; then
    echo "üéâ SUCCESS! Flow State Dev is working correctly."
    echo "   Version: $(fsd --version)"
    echo "   Location: $(which fsd)"
else
    echo "‚ùå FAILURE! Flow State Dev is not working correctly."
    echo
    echo "Possible issues:"
    if [ ! -f "$BIN_FILE" ]; then
        echo "  ‚Ä¢ Bin file was not created during installation"
    elif [ ! -x "$BIN_FILE" ]; then
        echo "  ‚Ä¢ Bin file is not executable"
    elif ! echo "$PATH" | grep -q "$NPM_BIN"; then
        echo "  ‚Ä¢ npm bin directory is not in PATH"
    else
        echo "  ‚Ä¢ Unknown issue - may be a runtime error in the script"
    fi
    
    echo
    echo "üìù Next steps:"
    echo "  1. Share the installation log (/tmp/fsd-install.log) if it exists"
    echo "  2. Run the diagnostic script: curl -s https://raw.githubusercontent.com/jezweb/flow-state-dev/main/debug/diagnose.sh | bash"
    echo "  3. Create an issue at: https://github.com/jezweb/flow-state-dev/issues"
fi

echo
echo "üìÑ Installation log saved to: /tmp/fsd-install.log"
echo "üí° For more help, visit: https://github.com/jezweb/flow-state-dev/issues"